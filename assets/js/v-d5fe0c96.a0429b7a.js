"use strict";(self.webpackChunkzhengjinhuai=self.webpackChunkzhengjinhuai||[]).push([[98],{5512:(e,a,r)=>{r.r(a),r.d(a,{data:()=>t});const t=JSON.parse('{"key":"v-d5fe0c96","path":"/design-pattern/","title":"Design Pattern","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"面向对象的设计原则？","slug":"面向对象的设计原则","link":"#面向对象的设计原则","children":[]},{"level":2,"title":"观察者模式（Observer Pattern）","slug":"观察者模式-observer-pattern","link":"#观察者模式-observer-pattern","children":[]},{"level":2,"title":"适配器模式","slug":"适配器模式","link":"#适配器模式","children":[]}],"git":{"updatedTime":1719162578000,"contributors":[{"name":"zhengjinhuai","email":"873217817@qq.com","commits":2}]},"filePathRelative":"design-pattern/index.md"}')},1286:(e,a,r)=>{r.r(a),r.d(a,{default:()=>h});var t=r(6252);const i=[(0,t.uE)('<h1 id="design-pattern" tabindex="-1"><a class="header-anchor" href="#design-pattern" aria-hidden="true">#</a> Design Pattern</h1><h2 id="面向对象的设计原则" tabindex="-1"><a class="header-anchor" href="#面向对象的设计原则" aria-hidden="true">#</a> 面向对象的设计原则？</h2><ul><li>单一职责原则</li><li>开放、封闭原则</li><li>最少知识原则</li></ul><h2 id="观察者模式-observer-pattern" tabindex="-1"><a class="header-anchor" href="#观察者模式-observer-pattern" aria-hidden="true">#</a> 观察者模式（Observer Pattern）</h2><h2 id="适配器模式" tabindex="-1"><a class="header-anchor" href="#适配器模式" aria-hidden="true">#</a> 适配器模式</h2>',5)],n={},h=(0,r(3744).Z)(n,[["render",function(e,a){return(0,t.wg)(),(0,t.iD)("div",null,i)}]])}}]);